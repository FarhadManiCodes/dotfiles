# Lazygit Configuration with Data Engineering/MLOps Enhancements
# Location: ~/.config/lazygit/config.yml

gui:
  # Theme and appearance
  theme:
    lightTheme: false
    activeBorderColor:
      - '#61afef'
      - bold
    inactiveBorderColor:
      - '#3e4451'
    optionsTextColor:
      - '#e06c75'
    selectedLineBgColor:
      - '#2c323c'
    selectedRangeBgColor:
      - '#2c323c'
    cherryPickedCommitBgColor:
      - '#c678dd'
    cherryPickedCommitFgColor:
      - '#ffffff'
    unstagedChangesColor:
      - '#e06c75'
    defaultFgColor:
      - '#abb2bf'
  # Window configuration
  splitDiff: auto
  skipRewordInEditorWarning: false
  skipStashWarning: false
  sidePanelWidth: 0.3333
  expandFocusedSidePanel: false
  mainPanelSplitMode: flexible
  language: auto
  timeFormat: 02 Jan 06 15:04 MST
  shortTimeFormat: 15:04
  commitLength:
    show: true
# Custom commands for data engineering workflow
customCommands:
  # Interactive commit using your existing gci function
  - key: 'C'
    command: 'zsh -c "source $DOTFILES/zsh/productivity/git-enhancements.sh && gci"'
    description: 'Interactive commit with DS/MLOps types'
    context: 'files'
    loadingText: 'Opening interactive commit...'
    output: terminal
  # Quick data science status (your existing gstds function)
  - key: 'S'
    command: 'zsh -c "source $DOTFILES/zsh/productivity/git-enhancements.sh && gstds"'
    description: 'Data Science Git Status'
    context: 'global'
    loadingText: 'Loading DS status...'
    output: terminal
  # DVC integration
  - key: 'v'
    prompts:
      - type: 'menu'
        title: 'DVC Commands'
        options:
          - name: 'status'
            description: 'Check DVC status'
            value: 'dvc status'
          - name: 'push'
            description: 'Push data to remote'
            value: 'dvc push'
          - name: 'pull'
            description: 'Pull data from remote'
            value: 'dvc pull'
          - name: 'repro'
            description: 'Reproduce pipeline'
            value: 'dvc repro'
    command: '{{.Form.DvcCommand}}'
    context: 'global'
    description: 'DVC operations'
    loadingText: 'Running DVC command...'
  # Clean notebooks (remove output)
  - key: 'N'
    command: 'find . -name "*.ipynb" -exec jupyter nbconvert --clear-output --inplace {} \;'
    description: 'Clean notebook outputs'
    context: 'global'
    loadingText: 'Cleaning notebooks...'
    confirm: true
  # Quick push with upstream setup
  - key: 'P'
    prompts:
      - type: 'confirm'
        title: 'Push to origin?'
        body: 'This will push current branch to origin and set upstream if needed'
    command: 'git push -u origin $(git branch --show-current)'
    context: 'global'
    description: 'Push with upstream'
    loadingText: 'Pushing to origin...'
  # Experiment branch creation
  - key: 'X'
    prompts:
      - type: 'input'
        title: 'Experiment name'
        initialValue: 'exp-'
    command: 'git checkout -b {{.Form.ExperimentName}}'
    context: 'global'
    description: 'Create experiment branch'
    loadingText: 'Creating experiment branch...'
git:
  # Paging and diff settings
  paging:
    colorArg: always
    pager: delta --dark --paging=never
    useConfig: false
  # Commit settings
  commit:
    signOff: false
    verbose: true
  # Merge settings
  merging:
    manualCommit: false
    args: '--no-ff'
  # Pull settings
  pull:
    mode: 'merge'
  # Push setting
  push:
    autoSetUpstream: true
  # Skip hooks for performance (enable when needed)
  skipHookPrefix: WIP
  # Auto-fetch
  autoFetch: true
  autoRefresh: true
  fetchAll: false
  # Branch settings
  branchLogCmd: 'git log --graph --color=always --abbrev-commit --decorate --date=relative --pretty=medium {{branchName}} --'
  # Better diff algorithm
  diffAlgorithm: 'histogram'
  allBranchesLogCmds:
    - git log --graph --all --color=always --abbrev-commit --decorate --date=relative  --pretty=medium
# File handling
os:
  # Use delta for diffs if available, fallback to less
  diffCommand: 'delta --paging=never'
  # Edit with your preferred editor
  editCommand: 'vim'
  editCommandTemplate: '{{editor}} +{{line}} {{filename}}'
  openCommand: 'xdg-open {{filename}}'
# Refresh settings
refresher:
  refreshInterval: 10
  fetchInterval: 60
# Confirmation settings
confirmOnQuit: false
quitOnTopLevelReturn: false
# Key bindings (custom additions)
keybinding:
  universal:
    quit: 'q'
    quit-alt1: '<c-c>'
    return: '<esc>'
    quitWithoutChangingDirectory: 'Q'
    togglePanel: '<tab>'
    prevItem: '<up>'
    nextItem: '<down>'
    prevItem-alt: 'k'
    nextItem-alt: 'j'
    prevPage: ','
    nextPage: '.'
    gotoTop: '<'
    gotoBottom: '>'
    scrollLeft: 'H'
    scrollRight: 'L'
    prevBlock: '<left>'
    nextBlock: '<right>'
    prevBlock-alt: 'h'
    nextBlock-alt: 'l'
    jumpToBlock: ['1', '2', '3', '4', '5']
    nextMatch: 'n'
    prevMatch: 'N'
    optionMenu: 'x'
    optionMenu-alt1: '?'
    select: '<space>'
    goInto: '<enter>'
    openRecentRepos: '<c-r>'
    confirm: '<enter>'
    confirm-alt1: 'y'
    remove: 'd'
    new: 'n'
    edit: 'e'
    openFile: 'o'
    scrollUpMain: '<pgup>'
    scrollDownMain: '<pgdown>'
    scrollUpMain-alt1: 'K'
    scrollDownMain-alt1: 'J'
    scrollUpMain-alt2: '<c-u>'
    scrollDownMain-alt2: '<c-d>'
    executeShellCommand: ':'
    createRebaseOptionsMenu: 'm'
    pushFiles: 'P'
    pullFiles: 'p'
    refresh: 'R'
    createPatchOptionsMenu: '<c-p>'
    nextTab: ']'
    prevTab: '['
    nextScreenMode: '+'
    prevScreenMode: '_'
    undo: 'z'
    redo: '<c-z>'
    filteringMenu: '<c-s>'
    diffingMenu: 'W'
    diffingMenu-alt: '<c-e>'
    copyToClipboard: '<c-o>'
    submitEditorText: '<enter>'
    appendNewline: '<a-enter>'
    extrasMenu: '@'
    toggleWhitespaceInDiffView: '<c-w>'
  # Files panel bindings
  files:
    commitChanges: 'c'
    commitChangesWithoutHook: 'w'
    amendLastCommit: 'A'
    commitChangesWithEditor: 'C' # This will be overridden by our custom command
    ignoreFile: 'i'
    refreshFiles: 'r'
    stashAllChanges: 's'
    viewStashOptions: 'S'
    toggleStagedAll: 'a'
    viewResetOptions: 'D'
    fetch: 'f'
    toggleTreeView: '`'
    openMergeTool: 'M'
    openStatusFilter: '<c-b>'
# Show command log
showCommandLog: true
# Update checking
update:
  method: prompt
  days: 14
